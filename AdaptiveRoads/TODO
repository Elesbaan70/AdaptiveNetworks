    hints for the drop downs
    hints for vanilla stuff: wait for JurrijnP
    hints for my own flags.


version 2:
    mixed enum type bitmask
    custom flags
        data manager to manage them.
        UI to control them.
        all the network persistancy features.


start/end head/tail
too many drop downs
hoc to modify game flags




--------------------------------------------------------------------------------
notes
//simplified:
segment = the segment we wan to calculate node.
segmentA = another segment at the intersection. (to the left)
segmentB = yet another segment at the intersection. (to the right)

pavementRatio = segment.pavementWidth / segment.width;
pavementRatioA = segmentA.pavementWidth / segmentA.width;
pavementRatio_avgA = (pavementRatio + pavementRatioA) / 2;
roadRatioA = 2*segment.width/(segment.width+segmentA.width);

pavementRatio = segment.pavementWidth / segment.width;
pavementRatioB = segmentB.pavementWidth / segmentB.width;
pavementRatio_avgB = (pavementRatio + pavementRatioB) / 2
roadRatioB = 2*segment.width/(segment.width+segmentB.width);

data.m_dataVector0 = x: 1 / width | y: 1 / length | z: 0.5 - pavementRatio | w: pavementRatio
data.m_dataVector2 = x: pavementRatio_avgA | y: roadRatioA | z: pavementRatio_avgB | w: roadRatioB




y = Ar+B
6 = A*25 + B
6.25 = A*0.3125+B
=> A=4 B=5

y1 = A.x1 +B
y2 = A.x2 +B
--------------
-: y1-y2 = A(x1-x2) => A = y1-y2/x1-x2
+: y1+y2 = A(x1+x2)+2b => 2b = y1+y2 - A(x1+x2)

------------------------------------------------------------------------------
x1 = .25
y1 = 6
x2 = .3125
y2 = 6.25


a = (y1-y2) / (x1-x2)
b2 = y1+y2 - a * (x1+x2)
b = b2/2

print(f'{y1}=A*{x1}+B | {y2}=A*{x2}+B => A={a} B={b}')

--------------------------------------------------------------------------------
